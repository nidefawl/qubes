#version 330
uniform layout(std140) LightInfo 
{
    vec4 dayLightTime;
    vec4 posSun;
    vec4 lightDir;
    vec4 La;
    vec4 Ld;
    vec4 Ls;
} SkyLight;
uniform layout(std140) uboSceneData 
{
    vec4 cameraPosition;
    vec4 framePos;
    vec4 viewport;
    vec4 pxoffset;
    vec4 prevCameraPosition;
    vec4 sceneSettings;
} in_scene;
uniform layout(std140) uboMatrixShadow 
{
    mat4 shadow_split_mvp;
    vec4 shadow_split_depth;
} in_matrix_shadow;
uniform layout(std140) uboMatrix2D 
{
    mat4 mvp;
    mat4 p3DOrtho;
    mat4 mv3DOrtho;
} in_matrix_2D;
uniform layout(std140) uboMatrix3D 
{
    mat4 mvp;
    mat4 mv;
    mat4 view;
    mat4 vp;
    mat4 p;
    mat4 normal;
    mat4 mv_inv;
    mat4 proj_inv;
    mat4 mvp_inv;
} in_matrix_3D;
vec3 tmpvar_1;
float tmpvar_2;
float tmpvar_3;
vec4 tmpvar_4;
vec4 tmpvar_5;
uniform sampler2D texColor;
uniform sampler2D texNormals;
uniform usampler2D texMaterial;
uniform sampler2D texDepth;
uniform sampler2D texShadow;
uniform sampler2D texBlockLight;
uniform sampler2D texLight;
in vec2 pass_texcoord;
in float nightNoon;
in float dayLightIntens;
out vec4 out_Color;
out vec4 out_FinalMaterial;
void main ()
{
  float lum_6;
  float isBackface_7;
  float isIllum_8;
  float isWater_9;
  float alpha_10;
  vec4 tmpvar_11;
  tmpvar_11 = texture (texColor, pass_texcoord);
  tmpvar_1 = tmpvar_11.xyz;
  uvec4 tmpvar_12;
  tmpvar_12 = texture (texMaterial, pass_texcoord, 0.0);
  float tmpvar_13;
  tmpvar_13 = float(((tmpvar_12.y & 61440u) >> 12u));
  if ((tmpvar_13 != 2.0)) {
    discard;
  };
  if ((tmpvar_11.w < 0.1)) {
    discard;
  };
  uint tmpvar_14;
  tmpvar_14 = (tmpvar_12.y & 4095u);
  isWater_9 = float((tmpvar_14 == 10u));
  float tmpvar_15;
  tmpvar_15 = float((tmpvar_14 == 2222u));
  isIllum_8 = float((tmpvar_13 == 4.0));
  isBackface_7 = float((tmpvar_13 == 3.0));
  bool tmpvar_16;
  tmpvar_16 = (float((tmpvar_13 == 8.0)) == 1.0);
  lum_6 = dot (tmpvar_11.xyz, vec3(0.3333, 0.3333, 0.3333));
  vec4 tmpvar_17;
  tmpvar_17 = texture (texNormals, pass_texcoord);
  vec3 tmpvar_18;
  tmpvar_18 = normalize(((tmpvar_17.xyz * 2.0) - 1.0));
  vec4 tmpvar_19;
  tmpvar_19 = texture (texBlockLight, pass_texcoord, 0.0);
  tmpvar_5 = texture (texLight, pass_texcoord, 0.0);
  vec4 tmpvar_20;
  tmpvar_20 = texture (texDepth, pass_texcoord);
  vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xy = ((pass_texcoord * vec2(2.0, 2.0)) - vec2(1.0, 1.0));
  tmpvar_21.z = ((2.0 * tmpvar_20.x) - 1.0);
  vec4 tmpvar_22;
  tmpvar_22 = (in_matrix_3D.proj_inv * tmpvar_21);
  tmpvar_4 = (in_matrix_3D.mv_inv * (tmpvar_22 / tmpvar_22.w));
  tmpvar_2 = (((2.0 * in_scene.viewport.z) * in_scene.viewport.w) / ((in_scene.viewport.w + in_scene.viewport.z) - (
    ((2.0 * tmpvar_20.x) - 1.0)
   * 
    (in_scene.viewport.w - in_scene.viewport.z)
  )));
  vec3 tmpvar_23;
  tmpvar_23 = normalize((in_scene.cameraPosition.xyz - tmpvar_4.xyz));
  tmpvar_3 = max (dot (tmpvar_18, SkyLight.lightDir.xyz), 0.0);
  alpha_10 = (tmpvar_11.w + float((tmpvar_13 == 5.0)));
  alpha_10 = min (alpha_10, 1.0);
  if (!(tmpvar_16)) {
    vec3 finalLight_24;
    float sunLight_25;
    float occlusion_26;
    float skyLightLvl_27;
    float fNight_28;
    float spec_29;
    float NdotLAmb2_30;
    float NdotLAmb1_31;
    NdotLAmb1_31 = max (dot (tmpvar_18, vec3(0.4082483, 0.8164966, 0.4082483)), 0.0);
    NdotLAmb2_30 = max (dot (tmpvar_18, vec3(-0.5025189, -0.7035265, -0.5025189)), 0.0);
    vec3 I_32;
    I_32 = -(SkyLight.lightDir.xyz);
    spec_29 = (clamp (pow (
      max (dot (tmpvar_23, (I_32 - (2.0 * 
        (dot (tmpvar_18, I_32) * tmpvar_18)
      ))), 0.0)
    , 
      (exp2((1.0 + (tmpvar_17.w * 24.0))) - 1.0)
    ), 0.0, 1.0) * 22.0);
    float tmpvar_33;
    tmpvar_33 = clamp (clamp ((nightNoon - tmpvar_15), 0.0, 1.0), 0.0, 1.0);
    fNight_28 = (tmpvar_33 * (tmpvar_33 * (3.0 - 
      (2.0 * tmpvar_33)
    )));
    float tmpvar_34;
    tmpvar_34 = clamp (tmpvar_19.x, 0.0, 1.0);
    skyLightLvl_27 = (tmpvar_34 * (tmpvar_34 * (3.0 - 
      (2.0 * tmpvar_34)
    )));
    occlusion_26 = min (tmpvar_19.z, 1.0);
    occlusion_26 = min (1.0, occlusion_26);
    float tmpvar_35;
    vec4 v3_36;
    vec4 v2_37;
    vec4 v_38;
    vec4 v2_39;
    v2_39 = (((in_matrix_shadow.shadow_split_mvp[0] * tmpvar_4) * 0.5) + 0.5);
    v_38 = v2_39;
    vec4 v2_40;
    v2_40 = (((in_matrix_shadow.shadow_split_mvp[1] * tmpvar_4) * 0.5) + 0.5);
    v2_37 = v2_40;
    vec4 v2_41;
    v2_41 = (((in_matrix_shadow.shadow_split_mvp[2] * tmpvar_4) * 0.5) + 0.5);
    v3_36 = v2_41;
    vec2 tmpvar_42;
    tmpvar_42 = ((pass_texcoord * 2.0) - 1.0);
    float tmpvar_43;
    tmpvar_43 = max (0.68, (1.3 - sqrt(
      ((tmpvar_42.x * tmpvar_42.x) + (tmpvar_42.y * tmpvar_42.y))
    )));
    vec4 tmpvar_44;
    tmpvar_44 = in_matrix_shadow.shadow_split_depth;
    float mapZ_45;
    mapZ_45 = (tmpvar_44.x * tmpvar_43);
    float tmpvar_46;
    tmpvar_46 = clamp (v2_39.x, 0.0, 1.0);
    bool tmpvar_47;
    if ((tmpvar_46 == v2_39.x)) {
      tmpvar_47 = (clamp (v2_39.z, 0.0, 1.0) == v2_39.z);
    } else {
      tmpvar_47 = bool(0);
    };
    if ((tmpvar_47 && (tmpvar_2 < mapZ_45))) {
      float s_48;
      v_38.z = (v2_39.z * 0.9997);
      s_48 = 0.0;
      vec4 tmpvar_49;
      tmpvar_49 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(-0.0002441406, -0.0002441406)));
      if ((v_38.z <= tmpvar_49.x)) {
        s_48 = 1.0;
      };
      vec4 tmpvar_50;
      tmpvar_50 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(-0.0002441406, 0.0)));
      if ((v_38.z <= tmpvar_50.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_51;
      tmpvar_51 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(-0.0002441406, 0.0002441406)));
      if ((v_38.z <= tmpvar_51.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_52;
      tmpvar_52 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(0.0, -0.0002441406)));
      if ((v_38.z <= tmpvar_52.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_53;
      tmpvar_53 = texture (texShadow, (v2_39.xy * 0.5));
      if ((v_38.z <= tmpvar_53.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_54;
      tmpvar_54 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(0.0, 0.0002441406)));
      if ((v_38.z <= tmpvar_54.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_55;
      tmpvar_55 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(0.0002441406, -0.0002441406)));
      if ((v_38.z <= tmpvar_55.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_56;
      tmpvar_56 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(0.0002441406, 0.0)));
      if ((v_38.z <= tmpvar_56.x)) {
        s_48 += 1.0;
      };
      vec4 tmpvar_57;
      tmpvar_57 = texture (texShadow, ((v2_39.xy * 0.5) + vec2(0.0002441406, 0.0002441406)));
      if ((v_38.z <= tmpvar_57.x)) {
        s_48 += 1.0;
      };
      s_48 = (s_48 / 9.0);
      tmpvar_35 = s_48;
    } else {
      float mapZ_58;
      mapZ_58 = (tmpvar_44.y * tmpvar_43);
      float tmpvar_59;
      tmpvar_59 = clamp (v2_40.x, 0.0, 1.0);
      bool tmpvar_60;
      if ((tmpvar_59 == v2_40.x)) {
        tmpvar_60 = (clamp (v2_40.z, 0.0, 1.0) == v2_40.z);
      } else {
        tmpvar_60 = bool(0);
      };
      if ((tmpvar_60 && (tmpvar_2 < mapZ_58))) {
        float s_61;
        v2_37.z = (v2_40.z * 0.9999);
        s_61 = 0.0;
        vec4 tmpvar_62;
        tmpvar_62 = texture (texShadow, (vec2(0.4997559, -0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_62.x)) {
          s_61 = 1.0;
        };
        vec4 tmpvar_63;
        tmpvar_63 = texture (texShadow, (vec2(0.4997559, 0.0) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_63.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_64;
        tmpvar_64 = texture (texShadow, (vec2(0.4997559, 0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_64.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_65;
        tmpvar_65 = texture (texShadow, (vec2(0.5, -0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_65.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_66;
        tmpvar_66 = texture (texShadow, ((v2_40.xy * 0.5) + vec2(0.5, 0.0)));
        if ((v2_37.z <= tmpvar_66.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_67;
        tmpvar_67 = texture (texShadow, (vec2(0.5, 0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_67.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_68;
        tmpvar_68 = texture (texShadow, (vec2(0.5002441, -0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_68.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_69;
        tmpvar_69 = texture (texShadow, (vec2(0.5002441, 0.0) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_69.x)) {
          s_61 += 1.0;
        };
        vec4 tmpvar_70;
        tmpvar_70 = texture (texShadow, (vec2(0.5002441, 0.0002441406) + (v2_40.xy * 0.5)));
        if ((v2_37.z <= tmpvar_70.x)) {
          s_61 += 1.0;
        };
        s_61 = (s_61 / 9.0);
        tmpvar_35 = s_61;
      } else {
        float tmpvar_71;
        tmpvar_71 = clamp (v2_41.x, 0.0, 1.0);
        bool tmpvar_72;
        if ((tmpvar_71 == v2_41.x)) {
          tmpvar_72 = (clamp (v2_41.z, 0.0, 1.0) == v2_41.z);
        } else {
          tmpvar_72 = bool(0);
        };
        if ((tmpvar_72 && (tmpvar_2 < tmpvar_44.z))) {
          float s_73;
          v3_36.z = (v2_41.z * 0.9997);
          s_73 = 0.0;
          vec4 tmpvar_74;
          tmpvar_74 = texture (texShadow, (vec2(-0.0002441406, 0.4997559) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_74.x)) {
            s_73 = 1.0;
          };
          vec4 tmpvar_75;
          tmpvar_75 = texture (texShadow, (vec2(-0.0002441406, 0.5) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_75.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_76;
          tmpvar_76 = texture (texShadow, (vec2(-0.0002441406, 0.5002441) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_76.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_77;
          tmpvar_77 = texture (texShadow, (vec2(0.0, 0.4997559) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_77.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_78;
          tmpvar_78 = texture (texShadow, ((v2_41.xy * 0.5) + vec2(0.0, 0.5)));
          if ((v3_36.z <= tmpvar_78.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_79;
          tmpvar_79 = texture (texShadow, (vec2(0.0, 0.5002441) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_79.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_80;
          tmpvar_80 = texture (texShadow, (vec2(0.0002441406, 0.4997559) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_80.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_81;
          tmpvar_81 = texture (texShadow, (vec2(0.0002441406, 0.5) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_81.x)) {
            s_73 += 1.0;
          };
          vec4 tmpvar_82;
          tmpvar_82 = texture (texShadow, (vec2(0.0002441406, 0.5002441) + (v2_41.xy * 0.5)));
          if ((v3_36.z <= tmpvar_82.x)) {
            s_73 += 1.0;
          };
          s_73 = (s_73 / 9.0);
          tmpvar_35 = s_73;
        } else {
          tmpvar_35 = 1.0;
        };
      };
    };
    float tmpvar_83;
    tmpvar_83 = ((tmpvar_35 * (1.0 - isBackface_7)) * (1.0 - (isWater_9 * 0.8)));
    sunLight_25 = (max ((tmpvar_83 * 
      (0.05 - (fNight_28 * 0.035))
    ), (
      ((skyLightLvl_27 * tmpvar_3) * (tmpvar_83 * dayLightIntens))
     * 
      (1.0 - fNight_28)
    )) * occlusion_26);
    float tmpvar_84;
    tmpvar_84 = max (0.0, sunLight_25);
    sunLight_25 = tmpvar_84;
    finalLight_24 = (((
      (SkyLight.La.xyz * mix (vec3(1.0, 1.0, 1.0), vec3(0.8, 0.9, 1.1), fNight_28))
     * 
      ((NdotLAmb1_31 + NdotLAmb2_30) * 0.45)
    ) * (0.05 + 
      (occlusion_26 * 0.95)
    )) * (0.03 + (skyLightLvl_27 * 0.97)));
    finalLight_24 = (finalLight_24 + ((SkyLight.Ls.xyz * spec_29) * tmpvar_84));
    finalLight_24 = (finalLight_24 + ((SkyLight.Ld.xyz * 1.5) * tmpvar_84));
    finalLight_24 = (finalLight_24 + ((
      ((lum_6 * mix (1.0, occlusion_26, 0.19)) * 0.66)
     * tmpvar_15) * (1.0 - 
      pow ((1.0 - tmpvar_19.y), 0.05)
    )));
    finalLight_24 = (finalLight_24 + (isIllum_8 * 4.0));
    float tmpvar_85;
    tmpvar_85 = (tmpvar_19.y / 8.0);
    finalLight_24 = (finalLight_24 + ((vec3(1.0, 0.9, 0.7) * 
      (tmpvar_85 * tmpvar_85)
    ) * (
      (1.0 - (tmpvar_15 * 0.8))
     * 15.0)));
    float tmpvar_86;
    tmpvar_86 = (0.1 + (tmpvar_83 * 0.7));
    finalLight_24 = (finalLight_24 * max ((tmpvar_86 + 
      (1.0 - tmpvar_86)
    ), (isWater_9 + 
      (isBackface_7 * 0.5)
    )));
    finalLight_24 = (finalLight_24 + (tmpvar_5.xyz * occlusion_26));
    alpha_10 = clamp (alpha_10, 0.0, 1.0);
    spec_29 = (spec_29 * tmpvar_83);
    tmpvar_1 = (tmpvar_11.xyz * finalLight_24);
  };
  vec4 tmpvar_87;
  tmpvar_87.yzw = vec3(0.0, 0.0, 1.0);
  tmpvar_87.x = (float((tmpvar_12.x & 4095u)) / 200.0);
  out_FinalMaterial = tmpvar_87;
  vec4 tmpvar_88;
  tmpvar_88.xyz = tmpvar_1;
  tmpvar_88.w = alpha_10;
  out_Color = tmpvar_88;
}

