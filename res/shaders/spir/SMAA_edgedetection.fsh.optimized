#version 330
uniform layout(std140) uboSceneData 
{
    vec4 cameraPosition;
    vec4 framePos;
    vec4 viewport;
    vec4 pxoffset;
    vec4 prevCameraPosition;
    vec4 sceneSettings;
} in_scene;
uniform layout(std140) uboMatrixShadow 
{
    mat4 shadow_split_mvp;
    vec4 shadow_split_depth;
} in_matrix_shadow;
uniform layout(std140) uboMatrix2D 
{
    mat4 mvp;
    mat4 p3DOrtho;
    mat4 mv3DOrtho;
} in_matrix_2D;
uniform layout(std140) uboMatrix3D 
{
    mat4 mvp;
    mat4 mv;
    mat4 view;
    mat4 vp;
    mat4 p;
    mat4 normal;
    mat4 mv_inv;
    mat4 proj_inv;
    mat4 mvp_inv;
} in_matrix_3D;
uniform sampler2D texColor;
in vec2 pass_texcoord;
in vec4 offset0;
in vec4 offset1;
in vec4 offset2;
out vec4 out_Color;
void main ()
{
  vec4 delta_1;
  float tmpvar_2;
  tmpvar_2 = dot (texture (texColor, pass_texcoord).xyz, vec3(0.2126, 0.7152, 0.0722));
  float tmpvar_3;
  tmpvar_3 = dot (texture (texColor, offset0.xy).xyz, vec3(0.2126, 0.7152, 0.0722));
  float tmpvar_4;
  tmpvar_4 = dot (texture (texColor, offset0.zw).xyz, vec3(0.2126, 0.7152, 0.0722));
  vec2 tmpvar_5;
  tmpvar_5.x = tmpvar_3;
  tmpvar_5.y = tmpvar_4;
  delta_1.xy = abs((tmpvar_2 - tmpvar_5));
  vec2 tmpvar_6;
  tmpvar_6 = vec2(greaterThanEqual (delta_1.xy, vec2(0.1, 0.1)));
  float tmpvar_7;
  tmpvar_7 = dot (tmpvar_6, vec2(1.0, 1.0));
  if ((tmpvar_7 == 0.0)) {
    discard;
  };
  vec2 tmpvar_8;
  tmpvar_8.x = dot (texture (texColor, offset1.xy).xyz, vec3(0.2126, 0.7152, 0.0722));
  tmpvar_8.y = dot (texture (texColor, offset1.zw).xyz, vec3(0.2126, 0.7152, 0.0722));
  delta_1.zw = abs((tmpvar_2 - tmpvar_8));
  vec2 tmpvar_9;
  tmpvar_9 = max (delta_1.xy, delta_1.zw);
  vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_3;
  tmpvar_10.y = tmpvar_4;
  vec2 tmpvar_11;
  tmpvar_11.x = dot (texture (texColor, offset2.xy).xyz, vec3(0.2126, 0.7152, 0.0722));
  tmpvar_11.y = dot (texture (texColor, offset2.zw).xyz, vec3(0.2126, 0.7152, 0.0722));
  delta_1.zw = abs((tmpvar_10 - tmpvar_11));
  vec2 tmpvar_12;
  tmpvar_12 = max (tmpvar_9, delta_1.zw);
  vec4 tmpvar_13;
  tmpvar_13.zw = vec2(0.0, 0.0);
  tmpvar_13.xy = (tmpvar_6 * vec2(greaterThanEqual (
    (2.0 * delta_1.xy)
  , vec2(
    max (tmpvar_12.x, tmpvar_12.y)
  ))));
  out_Color = tmpvar_13;
}

