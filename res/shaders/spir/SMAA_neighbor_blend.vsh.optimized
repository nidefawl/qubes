#version 330
uniform layout(std140) uboSceneData 
{
    vec4 cameraPosition;
    vec4 framePos;
    vec4 viewport;
    vec4 pxoffset;
    vec4 prevCameraPosition;
    vec4 sceneSettings;
} in_scene;
uniform layout(std140) uboMatrixShadow 
{
    mat4 shadow_split_mvp;
    vec4 shadow_split_depth;
} in_matrix_shadow;
uniform layout(std140) uboMatrix2D 
{
    mat4 mvp;
    mat4 p3DOrtho;
    mat4 mv3DOrtho;
} in_matrix_2D;
uniform layout(std140) uboMatrix3D 
{
    mat4 mvp;
    mat4 mv;
    mat4 view;
    mat4 vp;
    mat4 p;
    mat4 normal;
    mat4 mv_inv;
    mat4 proj_inv;
    mat4 mvp_inv;
} in_matrix_3D;
out vec2 pass_texcoord;
out vec4 offset;
void main ()
{
  pass_texcoord = vec4[3](vec4(-1.0, -3.0, 0.0, 2.0), vec4(3.0, 1.0, 2.0, 0.0), vec4(-1.0, 1.0, 0.0, 0.0))[gl_VertexID].zw;
  vec4 tmpvar_1;
  tmpvar_1.zw = vec2(0.0, 1.0);
  tmpvar_1.xy = vec4[3](vec4(-1.0, -3.0, 0.0, 2.0), vec4(3.0, 1.0, 2.0, 0.0), vec4(-1.0, 1.0, 0.0, 0.0))[gl_VertexID].xy;
  gl_Position = tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2.x = (1.0/(in_scene.viewport.x));
  tmpvar_2.y = (1.0/(in_scene.viewport.y));
  tmpvar_2.z = in_scene.viewport.x;
  tmpvar_2.w = in_scene.viewport.y;
  offset = ((tmpvar_2.xyxy * vec4(1.0, 0.0, 0.0, 1.0)) + pass_texcoord.xyxy);
}

