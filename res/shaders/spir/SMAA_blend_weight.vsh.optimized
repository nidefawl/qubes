#version 330
uniform layout(std140) uboSceneData 
{
    vec4 cameraPosition;
    vec4 framePos;
    vec4 viewport;
    vec4 pxoffset;
    vec4 prevCameraPosition;
    vec4 sceneSettings;
} in_scene;
uniform layout(std140) uboMatrixShadow 
{
    mat4 shadow_split_mvp;
    vec4 shadow_split_depth;
} in_matrix_shadow;
uniform layout(std140) uboMatrix2D 
{
    mat4 mvp;
    mat4 p3DOrtho;
    mat4 mv3DOrtho;
} in_matrix_2D;
uniform layout(std140) uboMatrix3D 
{
    mat4 mvp;
    mat4 mv;
    mat4 view;
    mat4 vp;
    mat4 p;
    mat4 normal;
    mat4 mv_inv;
    mat4 proj_inv;
    mat4 mvp_inv;
} in_matrix_3D;
out vec2 pass_texcoord;
out vec2 pixcoord;
out vec4 offset0;
out vec4 offset1;
out vec4 offset2;
void main ()
{
  pass_texcoord = vec4[3](vec4(-1.0, -1.0, 0.0, 0.0), vec4(3.0, -1.0, 2.0, 0.0), vec4(-1.0, 3.0, 0.0, 2.0))[gl_VertexID].zw;
  vec4 tmpvar_1;
  tmpvar_1.zw = vec2(0.0, 1.0);
  tmpvar_1.xy = vec4[3](vec4(-1.0, -1.0, 0.0, 0.0), vec4(3.0, -1.0, 2.0, 0.0), vec4(-1.0, 3.0, 0.0, 2.0))[gl_VertexID].xy;
  gl_Position = tmpvar_1;
  vec4 offset_0_2;
  vec4 offset_1_3;
  vec4 tmpvar_4;
  tmpvar_4.x = (1.0/(in_scene.viewport.x));
  tmpvar_4.y = (1.0/(in_scene.viewport.y));
  tmpvar_4.z = in_scene.viewport.x;
  tmpvar_4.w = in_scene.viewport.y;
  vec4 tmpvar_5;
  tmpvar_5.x = (1.0/(in_scene.viewport.x));
  tmpvar_5.y = (1.0/(in_scene.viewport.y));
  tmpvar_5.z = in_scene.viewport.x;
  tmpvar_5.w = in_scene.viewport.y;
  offset_0_2 = ((tmpvar_5.xyxy * vec4(-0.25, -0.125, 1.25, -0.125)) + pass_texcoord.xyxy);
  vec4 tmpvar_6;
  tmpvar_6.x = (1.0/(in_scene.viewport.x));
  tmpvar_6.y = (1.0/(in_scene.viewport.y));
  tmpvar_6.z = in_scene.viewport.x;
  tmpvar_6.w = in_scene.viewport.y;
  offset_1_3 = ((tmpvar_6.xyxy * vec4(-0.125, -0.25, -0.125, 1.25)) + pass_texcoord.xyxy);
  vec4 tmpvar_7;
  tmpvar_7.x = (1.0/(in_scene.viewport.x));
  tmpvar_7.y = (1.0/(in_scene.viewport.y));
  tmpvar_7.z = in_scene.viewport.x;
  tmpvar_7.w = in_scene.viewport.y;
  vec4 tmpvar_8;
  tmpvar_8.xy = offset_0_2.xz;
  tmpvar_8.zw = offset_1_3.yw;
  pixcoord = (pass_texcoord * tmpvar_4.zw);
  offset0 = offset_0_2;
  offset1 = offset_1_3;
  offset2 = ((vec4(-16.0, 16.0, -16.0, 16.0) * tmpvar_7.xxyy) + tmpvar_8);
}

