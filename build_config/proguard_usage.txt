nidefawl.qubes.BootClientEmpty
nidefawl.qubes.BootServer
nidefawl.qubes.BootServer$1
nidefawl.qubes.Game:
    static final java.lang.String buildName
    static final java.lang.String buildVersion
    static final java.lang.String BUILD_CODE
    nidefawl.qubes.entity.PlayerSelf remotePlayer
    nidefawl.qubes.entity.PlayerSelf testPlayer
    nidefawl.qubes.world.WorldClient remoteWorld
    nidefawl.qubes.world.WorldClient testWorld
    244:258:protected void toggleTestMode()
    1244:1244:public boolean isInSelection(int,int,int)
nidefawl.qubes.GameRegistry:
    26:26:public GameRegistry()
nidefawl.qubes.PlayerProfile:
    28:28:public java.util.UUID getUUID()
nidefawl.qubes.assets.AssetManager:
    public abstract nidefawl.qubes.assets.AssetVoxModel loadVoxModel(java.lang.String)
    76:81:public java.util.Collection collectAssets(java.lang.String,java.lang.String)
    111:133:public void reloadPNGAsset(nidefawl.qubes.assets.AssetTexture)
nidefawl.qubes.assets.AssetManagerClient:
    27:47:public nidefawl.qubes.assets.AssetVoxModel loadVoxModel(java.lang.String)
nidefawl.qubes.assets.AssetManagerServer:
    25:25:public nidefawl.qubes.assets.AssetVoxModel loadVoxModel(java.lang.String)
nidefawl.qubes.assets.AssetPack:
    public abstract void collectAssets(java.lang.String,java.lang.String,java.util.LinkedHashSet)
nidefawl.qubes.assets.AssetPackClassPath:
    38:38:public void collectAssets(java.lang.String,java.lang.String,java.util.LinkedHashSet)
nidefawl.qubes.assets.AssetPackFolder:
    43:65:public void collectAssets(java.lang.String,java.lang.String,java.util.LinkedHashSet)
nidefawl.qubes.assets.AssetPackFolder$1
nidefawl.qubes.assets.AssetPackZip
nidefawl.qubes.assets.AssetPath
nidefawl.qubes.assets.AssetTexture:
    167:168:public void reload()
nidefawl.qubes.assets.AssetVoxModel
nidefawl.qubes.async.AsyncTasks:
    12:12:public AsyncTasks()
nidefawl.qubes.biome.Biome:
    213:213:public nidefawl.qubes.block.Block getWaterBlock()
nidefawl.qubes.biome.BiomeIce:
    32:32:public nidefawl.qubes.block.Block getWaterBlock()
nidefawl.qubes.block.Block:
    public static final int BLOCK_BITS
    public static final int NUM_BLOCKS
    public static final int BLOCK_MASK
    191:191:public nidefawl.qubes.block.BlockGroup getBlockGroup()
    215:215:public nidefawl.qubes.block.Block setName(java.lang.String)
    248:249:public varargs nidefawl.qubes.block.Block setAbsTextures(java.lang.String[])
    502:502:public boolean canStayAt(nidefawl.qubes.world.IBlockWorld,int,int,int)
    556:575:public java.util.ArrayList resolveTextures(nidefawl.qubes.assets.AssetManager)
    583:583:public boolean isWaving()
nidefawl.qubes.block.BlockAir:
    37:37:public varargs nidefawl.qubes.block.Block setAbsTextures(java.lang.String[])
nidefawl.qubes.block.BlockDoublePlant:
    69:69:public boolean applyRandomOffset()
    95:95:public boolean isWaving()
nidefawl.qubes.block.BlockGlass
nidefawl.qubes.block.BlockGrassBush:
    39:39:public boolean isWaving()
nidefawl.qubes.block.BlockGroup:
    18:18:public int getId()
nidefawl.qubes.block.BlockLight
nidefawl.qubes.block.BlockLit
nidefawl.qubes.block.BlockModelled:
    9:10:public BlockModelled(java.lang.String,boolean)
nidefawl.qubes.block.BlockPane:
    49:50:public BlockPane(java.lang.String)
nidefawl.qubes.block.BlockPlantCrossedSquares:
    101:101:public boolean isWaving()
nidefawl.qubes.block.BlockPlantFlat:
    57:57:public boolean applyRandomOffset()
nidefawl.qubes.block.BlockQuarterBlock:
    public static final int Q_DATA_TYPEID
    public static final int Q_SIZE
nidefawl.qubes.block.BlockQuarterLog
nidefawl.qubes.block.BlockSliced:
    5:6:public BlockSliced(java.lang.String)
nidefawl.qubes.block.BlockSnowLayer
nidefawl.qubes.block.BlockStone:
    6:7:public BlockStone(java.lang.String,boolean)
nidefawl.qubes.block.IDMappingBlocks:
    24:24:public IDMappingBlocks()
nidefawl.qubes.blocklight.BlockLightThread:
    static final int NUM_CACHES
    39:40:public void init()
nidefawl.qubes.blocklight.BlockLightUpdate:
    static final int STACK_SIZE
nidefawl.qubes.blocklight.LightChunkCache:
    public static final int NEXT
    public static final int WIDTH
    111:115:public int getLight(int,int,int,int,int,int)
    210:210:public nidefawl.qubes.chunk.Chunk getCenter()
nidefawl.qubes.chat.ChannelManager:
    57:57:public nidefawl.qubes.chat.channel.GlobalChannel getGlobal()
nidefawl.qubes.chat.channel.AbstractChannel:
    24:24:public java.lang.String getName()
    82:85:public void broadcastMessage(java.lang.String)
nidefawl.qubes.chat.channel.Channel
nidefawl.qubes.chat.channel.GlobalChannel:
    public static final java.lang.String TAG
nidefawl.qubes.chat.client.ChatManager:
    private static final long CHAT_LINE_MAX_AGE
    41:42:public void sendMessage(java.lang.String)
nidefawl.qubes.chunk.Chunk:
    public static final int SIZE_BITS
    public static final int SIZE
    public static final int MASK
    public static final int DATA_BITS
    private int top
    64:64:public boolean isEmpty()
    194:197:public int getTopBlock()
    201:212:private void updateChunk()
    356:356:public int[] getHeightMap()
    359:360:public void preUnload()
    444:444:public void getDestroyStage(int,int,int)
nidefawl.qubes.chunk.ChunkData:
    public abstract short get(int,int,int)
    18:18:public boolean setUpper(int,int,int,int)
nidefawl.qubes.chunk.ChunkDataFull
nidefawl.qubes.chunk.ChunkDataSliced
nidefawl.qubes.chunk.ChunkDataSliced2:
    public static final int DATA_HEIGHT_SLICES
    static final int DATA_HEIGHT_SLICE_MASK
    static final int SLICE_SIZE
nidefawl.qubes.chunk.ChunkManager:
    public static final int MAX_CHUNK
nidefawl.qubes.chunk.ChunkTable:
    87:92:public boolean containsKey(int,int)
    95:95:public int approxSize()
    116:116:public nidefawl.qubes.chunk.Chunk[] getEntries()
    120:129:public int getFixedSize()
    133:146:public boolean allRegionsLoaded(int,int,int)
    222:230:public void replace(int,int,nidefawl.qubes.chunk.Chunk)
nidefawl.qubes.chunk.blockdata.BlockData:
    public static final int HEADER_SIZE
nidefawl.qubes.chunk.blockdata.BlockDataQuarterBlock:
    81:83:public void setData(int,int,int,int)
    118:123:public boolean allFullBB()
nidefawl.qubes.chunk.blockdata.BlockDataSliced:
    public static final int DATA_HEIGHT_SLICES
    static final int DATA_HEIGHT_SLICE_MASK
    static final int SLICE_SIZE
    static final int SLICE_SIZE_MASK
nidefawl.qubes.chunk.client.ChunkManagerBenchmark
nidefawl.qubes.chunk.server.ChunkLoadThread:
    105:106:public void queueLoad(int,int)
nidefawl.qubes.chunk.server.ChunkManagerServer:
    83:84:public void queueLoad(int,int)
    130:133:public void saveChunk(int,int)
nidefawl.qubes.chunk.server.ChunkUnloadThread:
    27:28:public void init()
nidefawl.qubes.chunk.server.RegionFile:
    public static final int SECTOR_SIZE
    public static final int REGION_SIZE_BITS
    public static final int REGION_SIZE
    public static final int CHUNK_MASK
    public static final int NUM_CHUNKS
    public static final int FILE_META_SIZE
    public static final int CHUNK_META_SIZE
    public static final int HEADER_SIZE
    public static final int DATA_HEADER_SIZE
nidefawl.qubes.chunk.server.RegionFileCache:
    22:22:public static int lhToZ(long)
    26:26:public static int lhToX(long)
nidefawl.qubes.config.AbstractYMLConfig:
    134:137:public double getDouble(java.lang.String,double)
    145:146:protected void setDouble(java.lang.String,double)
nidefawl.qubes.config.ConfigLoader
nidefawl.qubes.config.WorkingEnv:
    9:9:public WorkingEnv()
    40:40:public static java.io.File getPacksFolder()
    57:57:public static java.io.File getWorkingDir()
nidefawl.qubes.crafting.CraftingCategory:
    public static final int NUM_CATS
    34:34:public java.lang.String getName()
nidefawl.qubes.crafting.CraftingManagerClient:
    27:27:public int getState()
nidefawl.qubes.crafting.recipes.CraftingRecipe:
    40:51:public boolean matches(nidefawl.qubes.inventory.slots.SlotsCrafting)
    55:55:public boolean isInput(nidefawl.qubes.item.Item)
    88:88:public java.lang.String getSubCat()
nidefawl.qubes.crafting.recipes.CraftingRecipes:
    17:17:public CraftingRecipes()
    124:124:public static nidefawl.qubes.crafting.recipes.CraftingRecipe[] getAll()
nidefawl.qubes.entity.Entity:
    public float yawfloat1
    public float yawfloat2
    public float yawfloat3
    public float yawfloat4
    public int ticks2
    public int ticks3
nidefawl.qubes.entity.EntityProperties:
    public static final int MAX_PROPERTIES
nidefawl.qubes.entity.PlayerSelfBenchmark
nidefawl.qubes.entity.ai.TaskEntry:
    19:20:public void setMask(int)
    26:26:public boolean isRunning()
nidefawl.qubes.font.FontRenderer:
    118:118:public int getTexture()
nidefawl.qubes.font.TextInput:
    60:62:public static boolean isAlphabetic(int)
    385:389:public void setEditText(java.lang.String)
nidefawl.qubes.font.TrueTypeFont:
    public static final int ALIGN_LEFT
    public static final int ALIGN_RIGHT
    public static final int ALIGN_CENTER
    public static final java.lang.String ctrls
    59:59:public java.lang.String trimColorChars(java.lang.String)
    224:224:public float getYPos()
    267:267:public float getCorrectL()
    436:442:public float drawGlyph(float,float,int,boolean,float)
    457:457:public float getSpaceWidth()
nidefawl.qubes.gl.AbstractTesselatorState:
    47:78:public void setAttrPtr()
nidefawl.qubes.gl.Camera:
    27:27:public float getYaw()
    31:31:public float getPitch()
nidefawl.qubes.gl.DisplayList
nidefawl.qubes.gl.Engine:
    public static final int NUM_PROJECTIONS
    public static final int MAX_LIGHTS
    public static final int SIZE_OF_STRUCT_LIGHT
    36:36:public Engine()
    211:211:public static void generateLightMapTexture()
    436:436:public static nidefawl.qubes.gl.BufferedMatrix getMatOrthoP()
    439:439:public static nidefawl.qubes.gl.BufferedMatrix getMatOrthoMV()
    550:564:public static void restartRenderThreads()
    696:697:public static void toggleDrawMode()
    703:706:public static void setOrthoMV(nidefawl.qubes.gl.BufferedMatrix)
    712:715:public static void restoreOrtho()
    718:718:public static nidefawl.qubes.vec.Vector3f getPxOffset()
nidefawl.qubes.gl.FrameBuffer:
    private static final int MAX_COLOR_ATT
nidefawl.qubes.gl.GL:
    20:20:public GL()
    69:70:public static void glFogv(int,java.nio.FloatBuffer)
    72:73:public static void glGetFloatv(int,java.nio.FloatBuffer)
    75:76:public static void glLoadMatrixf(java.nio.FloatBuffer)
nidefawl.qubes.gl.GLAttrBuffer:
    45:49:public void release()
nidefawl.qubes.gl.GLDebugLog
nidefawl.qubes.gl.GLDebugLog$1
nidefawl.qubes.gl.GLDebugTextures:
    223:225:public static int getTexture(java.lang.String,java.lang.String)
nidefawl.qubes.gl.GLTriBuffer:
    88:88:public int getVertexCount()
nidefawl.qubes.gl.GLVBO:
    static final int MIN_BUF_SIZE
    31:31:public boolean isTerrain()
    45:49:public void allocate(int,long)
    104:107:public void makeBindless(int)
nidefawl.qubes.gl.Memory:
    static final boolean DEBUG_ALLOC
    19:19:public Memory()
    43:48:public static java.nio.ByteBuffer createByteBuffer(int)
    100:102:public static java.nio.FloatBuffer createFloatBufferGC(int)
nidefawl.qubes.gl.MultiDrawIndirectBuffer:
    private int vertexBufferCount
    32:33:public void setInUse(boolean)
    35:35:public boolean isInUse()
    26:162:public MultiDrawIndirectBuffer(int)
    68:73:public void release()
    79:80:public void put(int[])
    98:98:public java.nio.ByteBuffer getByteBuf()
nidefawl.qubes.gl.ReallocIntBuffer:
    66:67:public void put(int[])
nidefawl.qubes.gl.ShadowProjector:
    46:46:public void init()
    173:173:public int checkFrustum(int,nidefawl.qubes.vec.AABBInt)
nidefawl.qubes.gl.Tess:
    public static final int BUF_INCR
    71:77:public void setUV(float,float)
    162:167:public void setUIntMSB(int)
nidefawl.qubes.gl.VertexBuffer:
    149:156:public void incrIndex(int[],int,int)
    159:160:public void incVertCount(int)
    172:185:public void makeTriIdx()
nidefawl.qubes.gui.GuiAction:
    public static final int ACTION_NONE
    public static final int ACTION_RESIZE
    public static final int ACTION_TABCLOSE
    public static final int ACTION_TABSWAP
    public static final int ACTION_TABCLICK
    public static final int ACTION_DRAGSCROLLBAR
    public static final int ACTION_TABMENU
    public static final int ACTION_USERLIST
    public static final int ACTION_DRAGUSERSCROLLBAR
    public static final int ACTION_USERMENU
    public static final int ACTION_DRAG_OBJ
    3:3:public GuiAction()
    21:22:public static void setAct(int)
nidefawl.qubes.gui.GuiChatInput:
    private boolean wasGrab
nidefawl.qubes.gui.GuiCrash
nidefawl.qubes.gui.controls.Button:
    61:62:public void setText(java.lang.String)
nidefawl.qubes.gui.controls.ComboBox:
    24:68:public ComboBox(nidefawl.qubes.gui.Gui,int,java.lang.String,boolean)
    372:375:public void setFont(nidefawl.qubes.font.FontRenderer)
    378:384:protected int getHoverState(boolean)
nidefawl.qubes.gui.controls.ComboBox$ComboBoxList:
    94:94:public java.lang.Object getValue(int)
    97:98:public nidefawl.qubes.gui.controls.ComboBox$ComboBoxList setSize(int)
nidefawl.qubes.gui.controls.ProgressBar:
    68:69:public void addProgress(float)
    72:72:public float getProgress()
nidefawl.qubes.gui.controls.ScrollList:
    36:40:float getMinY()
    43:49:float getMaxY()
nidefawl.qubes.gui.controls.TextField:
    private nidefawl.qubes.gui.Gui gui
nidefawl.qubes.gui.crafting.GuiCraftingProgressEntry:
    27:27:public boolean isSelected()
nidefawl.qubes.gui.crafting.GuiCraftingSelect:
    static final int slotw
    static final float inset
    static final float inset2
    729:745:private void populateScrolllist(java.util.List)
nidefawl.qubes.gui.windows.GuiContext:
    6:6:public GuiContext()
nidefawl.qubes.gui.windows.GuiInventoryResult:
    62:62:public java.lang.String getTitle()
nidefawl.qubes.gui.windows.GuiTest
nidefawl.qubes.gui.windows.GuiWindowManager:
    182:193:public static nidefawl.qubes.gui.windows.GuiWindow removeWindow(nidefawl.qubes.gui.windows.GuiWindow)
    332:332:public static nidefawl.qubes.gui.Tooltip getTooltip()
    340:343:public static boolean requiresTextInput()
    347:350:public static boolean onTextInput(int)
nidefawl.qubes.hex.HexCell:
    44:44:public java.lang.Object getRight()
    47:47:public java.lang.Object getLeft()
    50:50:public java.lang.Object getTopLeft()
    53:53:public java.lang.Object getTopRight()
    56:56:public java.lang.Object getBottomLeft()
    59:59:public java.lang.Object getBottomRight()
nidefawl.qubes.hex.HexagonGrid:
    72:76:public final nidefawl.qubes.hex.Point2F getPoint(int,int,int)
    80:88:public final nidefawl.qubes.hex.Point2F[] getPoints(int,int)
    92:92:public static long right(int,int)
    95:95:public static long topRight(int,int)
    98:98:public static long topLeft(int,int)
    101:101:public static long left(int,int)
    104:104:public static long bottomLeft(int,int)
    107:107:public static long bottomRight(int,int)
nidefawl.qubes.hex.HexagonGridStorage:
    34:36:public void reset()
nidefawl.qubes.hex.HexagonGridStorage$HexCellEnd
nidefawl.qubes.hex.Point2F:
    18:21:public Point2F(float,float)
nidefawl.qubes.input.DigController:
    35:43:public void onMouseClick(int,boolean)
    50:50:public int getTicks()
    57:57:public int getSpeed()
    75:79:private void startDigging()
    150:152:private void reset()
    168:217:public void renderBlockOver(nidefawl.qubes.gl.TesselatorState,nidefawl.qubes.vec.AABBFloat)
nidefawl.qubes.input.EditBlockTask
nidefawl.qubes.input.Keybinding:
    99:100:public void setPressed(boolean)
nidefawl.qubes.input.Keyboard:
    13:13:public Keyboard()
nidefawl.qubes.input.Mouse:
    public static final boolean DISABLE_MOUSE_INPUT
    13:13:public Mouse()
nidefawl.qubes.input.Selection:
    524:535:public boolean contains(int,int,int)
nidefawl.qubes.inventory.InventoryUtil:
    20:20:public InventoryUtil()
    64:71:public static int count(nidefawl.qubes.inventory.BaseInventory,nidefawl.qubes.item.BaseStack)
    75:83:public static boolean isEqual(nidefawl.qubes.item.BaseStack[],nidefawl.qubes.item.BaseStack[])
nidefawl.qubes.inventory.PlayerInventory:
    25:29:public nidefawl.qubes.inventory.PlayerInventory copy(nidefawl.qubes.inventory.PlayerInventory)
nidefawl.qubes.inventory.PlayerInventoryCrafting:
    21:21:public int getInputSlots()
    24:24:public int getOutputSlots()
    28:32:public nidefawl.qubes.inventory.PlayerInventoryCrafting copy(nidefawl.qubes.inventory.PlayerInventoryCrafting)
nidefawl.qubes.inventory.slots.SlotsCrafting:
    22:22:public int getSize()
nidefawl.qubes.io.BinaryStreamReader:
    25:30:int[] readUByteArray(int)
    39:41:public double readDouble()
    49:49:public nidefawl.qubes.vec.Quaternion readQuaternion()
    81:84:public int readSByte()
nidefawl.qubes.io.ByteArrIO:
    9:9:public ByteArrIO()
    88:92:public static short[] byteToShortArray(byte[])
nidefawl.qubes.io.ByteInStream
nidefawl.qubes.io.ByteOutStream
nidefawl.qubes.item.BaseStack:
    56:56:public boolean is(nidefawl.qubes.block.Block)
    59:59:public boolean is(nidefawl.qubes.item.Item)
    89:89:public int getData()
    92:93:public void setId(int)
    95:96:public void setData(int)
nidefawl.qubes.item.IDMappingItems:
    24:24:public IDMappingItems()
nidefawl.qubes.item.Item:
    public static final int ITEM_MASK
    public static final int NUM_ITEMS
    43:43:public static nidefawl.qubes.item.Item[] getRegisteredIDs()
    57:57:public nidefawl.qubes.item.ItemGroup getItemGroup()
    96:97:public varargs nidefawl.qubes.item.Item setAbsTextures(java.lang.String[])
    136:141:public java.util.ArrayList resolveTextures(nidefawl.qubes.assets.AssetManager)
nidefawl.qubes.item.ItemGroup:
    13:13:public int getId()
    public abstract java.util.List getNames()
nidefawl.qubes.item.ItemGroupLog:
    20:20:public java.util.List getNames()
nidefawl.qubes.item.ItemGroupPlank:
    20:20:public java.util.List getNames()
nidefawl.qubes.item.ItemGroupStones:
    21:21:public java.util.List getNames()
nidefawl.qubes.item.ItemLog:
    13:13:public int getIndex()
nidefawl.qubes.item.ItemPlank
nidefawl.qubes.item.ItemStack:
    36:37:public ItemStack(nidefawl.qubes.nbt.Tag)
nidefawl.qubes.item.ItemStone:
    13:13:public int getIndex()
nidefawl.qubes.item.StackData:
    public static final int HAS_BLOCK_DATA
nidefawl.qubes.logging.ErrorHandler:
    5:5:public ErrorHandler()
nidefawl.qubes.meshing.BlockFaceAttr:
    public static final int BLOCK_VERT_INT_SIZE
    public static final int BLOCK_VERT_BYTE_SIZE
    public static final int BLOCK_FACE_INT_SIZE
    public static final int BLOCK_FACE_BYTE_SIZE
    public static final int PASS_2_BLOCK_VERT_INT_SIZE
    public static final int PASS_2_BLOCK_VERT_BYTE_SIZE
    public static final int PASS_2_BLOCK_FACE_INT_SIZE
    public static final int PASS_2_BLOCK_FACE_BYTE_SIZE
    public static final int PASS_3_BLOCK_VERT_INT_SIZE
    public static final int PASS_3_BLOCK_VERT_BYTE_SIZE
    public static final int PASS_3_BLOCK_FACE_INT_SIZE
    public static final int PASS_3_BLOCK_FACE_BYTE_SIZE
    369:396:public int calcNormal()
nidefawl.qubes.meshing.BlockRenderer:
    1019:1030:float f(int,int)
    1405:1423:private void setLight()
nidefawl.qubes.meshing.BlockSurface:
    127:128:private boolean isOccludingId(int)
nidefawl.qubes.meshing.ChunkRenderCache:
    public static final int WIDTH
    public static final int WIDTH_EXTRA
    public static final int WIDTH_BLOCKS
    90:91:public nidefawl.qubes.biome.Biome getBiome(int,int)
    151:151:public boolean setType(int,int,int,int,int)
    156:156:public int getHeight(int,int)
    161:161:public boolean setData(int,int,int,int,int)
    178:178:public boolean setBlockData(int,int,int,nidefawl.qubes.chunk.blockdata.BlockData,int)
nidefawl.qubes.meshing.Mesher:
    static final boolean MEASURE
nidefawl.qubes.meshing.SlicedBlockFaceInfo
nidefawl.qubes.models.EntityModel:
    public static final int MODEL_BITS
    public static final int NUM_MODELS
    public static final int MODEL_MASK
    112:112:public void release()
    115:115:public nidefawl.qubes.models.qmodel.ModelQModel getModel()
nidefawl.qubes.models.EntityModelArcher$ModelOptionType
nidefawl.qubes.models.EntityModelManager:
    24:24:public void init()
nidefawl.qubes.models.EntityModelPlayer:
    284:284:public nidefawl.qubes.vec.Matrix4f getNormalMat()
    287:287:public nidefawl.qubes.vec.Matrix4f getModelMat()
nidefawl.qubes.models.EntityModelTest:
    105:105:public nidefawl.qubes.vec.Matrix4f getNormalMat()
    108:108:public nidefawl.qubes.vec.Matrix4f getModelMat()
nidefawl.qubes.models.EntityModelZombie:
    31:31:public java.lang.String getDefault(java.lang.String)
nidefawl.qubes.models.ItemModel:
    public static final int MODEL_BITS
    public static final int NUM_MODELS
    public static final int MODEL_MASK
    87:87:public void release()
nidefawl.qubes.models.ModelOption:
    19:19:public java.lang.String getOption(int)
nidefawl.qubes.models.qmodel.ModelBlock:
    64:64:public nidefawl.qubes.models.qmodel.QModelType getType()
nidefawl.qubes.models.qmodel.ModelQModel:
    public abstract nidefawl.qubes.models.qmodel.QModelType getType()
    225:225:public java.lang.String getName()
nidefawl.qubes.models.qmodel.ModelRigged:
    365:365:public nidefawl.qubes.models.qmodel.QModelType getType()
nidefawl.qubes.models.qmodel.ModelStatic:
    83:83:public nidefawl.qubes.models.qmodel.QModelType getType()
nidefawl.qubes.models.qmodel.QModelAbstractNode:
    public abstract nidefawl.qubes.models.qmodel.QModelAbstractNode getAttachementNode()
    public abstract nidefawl.qubes.models.qmodel.QModelBone getAttachmentBone()
nidefawl.qubes.models.qmodel.QModelActionState
nidefawl.qubes.models.qmodel.QModelBone:
    63:63:public java.util.List getChildren()
nidefawl.qubes.models.qmodel.QModelMaterial:
    private static final int FLAG_TEXTURED
nidefawl.qubes.models.qmodel.QModelNode:
    71:71:public nidefawl.qubes.models.qmodel.QModelAbstractNode getAttachementNode()
nidefawl.qubes.models.qmodel.QModelProperties:
    static final int MAX_PROPERTIES
    static final int MAX_ACTIONS
nidefawl.qubes.models.qmodel.QModelVertex:
    static final int MAX_BONES
nidefawl.qubes.models.qmodel.animation.KeyFrame:
    public abstract int getType()
nidefawl.qubes.models.qmodel.animation.QAnimationChannel:
    21:37:public QAnimationChannel(java.util.List)
nidefawl.qubes.models.qmodel.animation.QModelAction:
    public int totalFrames
nidefawl.qubes.models.qmodel.animation.QModelKeyFrameMatrix:
    28:28:public int getType()
nidefawl.qubes.models.qmodel.animation.QModelKeyFramePosition
nidefawl.qubes.models.qmodel.animation.QModelKeyFrameRotation
nidefawl.qubes.models.qmodel.animation.QModelKeyFrameScale
nidefawl.qubes.models.qmodel.loader.ModelAnimationLoader
nidefawl.qubes.models.qmodel.loader.ModelAnimationLoader$1
nidefawl.qubes.models.qmodel.loader.ModelLoaderQModel:
    static final java.lang.String HEADER
    49:51:public void loadModel(java.lang.String)
    203:208:private void printInfo()
nidefawl.qubes.models.render.QModelBatchedRender:
    public static final int MAX_INSTANCES
    public static final int SIZE_OF_MAT4
    public static final int NUM_BONE_MATRICES
    public static final int RENDERER_WORLD_MAIN
    public static final int RENDERER_WORLD_SHADOW
    public static final int RENDERER_WORLD_MODELVIEWER
    public static final int RENDERER_SCREEN_MODELVIEWER
    333:333:public boolean isOverCapacity()
nidefawl.qubes.models.render.QModelBatchedRender$ReallocFloatBuf:
    194:195:public void grow()
nidefawl.qubes.models.voxel.ModelVox
nidefawl.qubes.models.voxel.ModelVoxPalette
nidefawl.qubes.nbt.Tag:
    private static final int MAX_STR_LEN
    private static final int MAX_BYTE_ARR_SIZE
    private static final int MAX_LIST_LEN
    private static final int MAX_COMPOUND_TAG_ENTRIES
    public abstract java.lang.Object getValue()
nidefawl.qubes.nbt.Tag$BlockPos3:
    649:649:public java.lang.Object getValue()
    652:653:public void setData(nidefawl.qubes.vec.BlockPos)
    655:655:public nidefawl.qubes.vec.BlockPos getData()
nidefawl.qubes.nbt.Tag$Byte:
    81:81:public java.lang.Object getValue()
    95:96:public void setByte(byte)
nidefawl.qubes.nbt.Tag$ByteArray:
    123:123:public java.lang.Object getValue()
nidefawl.qubes.nbt.Tag$Compound:
    374:374:public java.lang.Object getValue()
    450:451:public double getDouble(java.lang.String)
nidefawl.qubes.nbt.Tag$Double:
    149:151:public Tag$Double(double)
    170:170:public java.lang.Object getValue()
    180:181:public void setDouble(double)
    184:184:public double getDouble()
nidefawl.qubes.nbt.Tag$End:
    40:40:public java.lang.Object getValue()
nidefawl.qubes.nbt.Tag$Float:
    557:557:public java.lang.Object getValue()
    567:567:public float getFloat()
    571:572:public void setFloat(float)
nidefawl.qubes.nbt.Tag$Int:
    598:598:public java.lang.Object getValue()
    612:613:public void setInt(int)
nidefawl.qubes.nbt.Tag$IntMap:
    328:328:public java.lang.Object getValue()
    355:355:public java.util.Map getData()
    359:361:public void set(java.util.HashMap)
nidefawl.qubes.nbt.Tag$Long:
    721:721:public java.lang.Object getValue()
    735:736:public void setLong(long)
nidefawl.qubes.nbt.Tag$Short:
    796:796:public java.lang.Object getValue()
    806:807:public void setShort(short)
    810:810:public short getShort()
nidefawl.qubes.nbt.Tag$StringTag:
    676:676:public java.lang.Object getValue()
    691:692:public void setString(java.lang.String)
nidefawl.qubes.nbt.Tag$TagList:
    267:267:public java.lang.Object getValue()
nidefawl.qubes.nbt.Tag$UUIDTag:
    763:763:public java.lang.Object getValue()
    777:778:public void setUUID(java.util.UUID)
nidefawl.qubes.nbt.Tag$Vec3Tag:
    215:215:public java.lang.Object getValue()
    225:226:public void setVec3(nidefawl.qubes.vec.Vector3f)
    229:230:public void setVec3(nidefawl.qubes.vec.Vec3D)
nidefawl.qubes.nbt.TagReadLimiter:
    12:21:public TagReadLimiter(int,int)
nidefawl.qubes.nbt.TagReader:
    10:10:public TagReader()
    13:14:public static nidefawl.qubes.nbt.Tag readTagFromBytes(byte[])
    18:19:public static nidefawl.qubes.nbt.Tag readTagFromBytesLimited(byte[])
    23:25:public static byte[] writeTagToBytes(nidefawl.qubes.nbt.Tag)
nidefawl.qubes.network.Connection:
    public static final int REMOTE
    public static final int LOCAL
nidefawl.qubes.network.Handler:
    public static final int STATE_HANDSHAKE
    public static final int STATE_AUTH
    public static final int STATE_SYNC
    public static final int STATE_CLIENT_SETTINGS
    public static final int STATE_CONNECTED
    public static final int STATE_LOBBY
    public static final int STATE_PLAYING
    public abstract boolean isServerSide()
    public abstract void update()
    public abstract java.lang.String getHandlerName()
nidefawl.qubes.network.client.ClientHandler:
    public static final long timeout
    73:73:public boolean isServerSide()
nidefawl.qubes.network.packet.Packet:
    public static final int MAX_ID
    public static final int MAX_STR_LEN
    public static final int NET_VERSION
    136:136:public boolean handleSynchronized()
    140:140:public static void init()
nidefawl.qubes.network.packet.PacketCSetBlock:
    21:22:public PacketCSetBlock(int,nidefawl.qubes.vec.BlockPos,int,nidefawl.qubes.item.BlockStack)
nidefawl.qubes.network.packet.PacketSDebugPath:
    19:21:public PacketSDebugPath(java.util.List)
nidefawl.qubes.network.packet.PacketSSetBlock:
    15:21:public PacketSSetBlock(int,int,int,int,int,int)
nidefawl.qubes.network.packet.PacketSWorldBiomes:
    28:29:public PacketSWorldBiomes(int)
nidefawl.qubes.network.server.ServerHandler:
    36:36:public boolean isServerSide()
nidefawl.qubes.noise.AbstractNoiseGen:
    public static final double gScale
nidefawl.qubes.noise.NoiseLib:
    15:15:public NoiseLib()
    42:42:public static boolean isLibPresent()
nidefawl.qubes.noise.NoiseMap2D:
    48:56:public double eval(double,double)
nidefawl.qubes.noise.RiverNoise2D:
    static final int CHUNK_SIZE
nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult:
    16:16:public double getNoise(double[],int,int,int,int)
nidefawl.qubes.noise.TerrainNoiseMap2D:
    static final int CHUNK_SIZE
nidefawl.qubes.noise.TerrainNoiseMap2DResult:
    13:13:public double getNoise(double[],int,int,int,int)
nidefawl.qubes.noise.opennoise.OpenSimplexNoise:
    public abstract double eval(double,double,double,double)
nidefawl.qubes.noise.opennoise.OpenSimplexNoiseJava:
    private static final double STRETCH_CONSTANT_2D
    private static final double SQUISH_CONSTANT_2D
    static final double STRETCH_CONSTANT_3D
    static final double SQUISH_CONSTANT_3D
    private static final double STRETCH_CONSTANT_4D
    private static final double SQUISH_CONSTANT_4D
    private static final double NORM_CONSTANT_2D
    static final double NORM_CONSTANT_3D
    private static final double NORM_CONSTANT_4D
    private static final long DEFAULT_SEED
    40:48:public OpenSimplexNoiseJava(short[])
    755:2062:public double eval(double,double,double,double)
    2082:2083:private double extrapolate(int,int,int,int,double,double,double,double)
nidefawl.qubes.noise.opennoise.OpenSimplexNoiseLib:
    public static native double eval(long,double,double,double,double)
    public static native void generateChunk(long,int,int,long)
    36:36:public double eval(double,double,double,double)
nidefawl.qubes.noise.opennoise.OpenSimplexNoiseTileable3D
nidefawl.qubes.noise.opennoise.SimplexValueNoise
nidefawl.qubes.noise.opennoise.SimplexValueSplineNoise
nidefawl.qubes.particle.CubeParticle:
    28:29:public void setType(int)
nidefawl.qubes.particle.CubeParticleRenderer:
    public static final int MAX_PARTICLES
    177:208:public void spawnParticles(int)
nidefawl.qubes.path.Path:
    23:27:public void incr()
nidefawl.qubes.path.PathList:
    36:36:public boolean containsElement(nidefawl.qubes.path.PathPoint)
nidefawl.qubes.perf.GPUProfiler:
    public static final boolean PROFILING_ENABLED
    private static nidefawl.qubes.perf.GPUTaskProfile currentTask
    private static int perFrame
    private static int frameCount
    12:12:public GPUProfiler()
    45:60:public static void startFrame()
    81:103:public static void endFrame()
    106:114:public static nidefawl.qubes.perf.GPUTaskProfile getFrameResults()
    119:126:public static void recycle(nidefawl.qubes.perf.GPUTaskProfile)
    130:138:private static int getQuery()
nidefawl.qubes.perf.GPUProfiler$1:
    34:34:public nidefawl.qubes.perf.GPUTaskProfile create()
    31:31:public bridge synthetic nidefawl.qubes.util.Poolable create()
nidefawl.qubes.perf.GPUTaskProfile
nidefawl.qubes.perf.TimingHelper:
    6:118:public TimingHelper()
    21:24:static java.lang.String stackToString()
    27:29:public static void endStart(java.lang.String)
    31:52:public static void startSec(java.lang.String)
    54:61:public static void endSec()
    85:93:public static long stopSilent(int)
    182:183:public static void setName(int,java.lang.String)
    188:193:public static void reset(int,int)
    201:207:public static void check()
nidefawl.qubes.perf.TimingHelper2
nidefawl.qubes.perf.TimingHelper2$1
nidefawl.qubes.perf.TimingHelper2$TimingEntry
nidefawl.qubes.render.BatchedRiggedModelRenderer
nidefawl.qubes.render.BatchedRiggedModelRenderer$1
nidefawl.qubes.render.BatchedRiggedModelRenderer2
nidefawl.qubes.render.BatchedRiggedModelRenderer2$1
nidefawl.qubes.render.FinalRenderer:
    private int blurTexture
    float curBrightness
    float brightness
    303:309:public int renderNormals()
nidefawl.qubes.render.ShadowRenderer:
    public static final int MULTI_DRAW
    public static final int MULTI_DRAW_TEXUTED
    public static final int MAX_SHADOW_RENDER_MODE
nidefawl.qubes.render.SkyRenderer:
    static final int MAX_SPRITES
    static final int SKYBOX_RES
nidefawl.qubes.render.WorldRenderer:
    public static final int NUM_PASSES
    public static final int PASS_SOLID
    public static final int PASS_TRANSPARENT
    public static final int PASS_SHADOW_SOLID
    public static final int PASS_LOD
    public static final int HALF_EXTRA_RENDER
    public static final int EXTRA_RENDER
    public static final float RDIST
    406:406:public void renderVoxModels(nidefawl.qubes.shader.Shader,int,float)
    671:671:public int getNumRendered()
nidefawl.qubes.render.gui.SingleBlockDraw:
    225:227:public void reset()
nidefawl.qubes.render.gui.SingleBlockRenderAtlas:
    static final int cols
    static final int tileSize
    static final int slots
    static final int texSize
nidefawl.qubes.render.post.SMAA:
    public static final int SMAA_PRESET_LOW
    public static final int SMAA_PRESET_MEDIUM
    public static final int SMAA_PRESET_HIGH
    public static final int SMAA_PRESET_ULTRA
nidefawl.qubes.render.region.RegionRenderer:
    public static final int REGION_SIZE_BITS
    public static final int REGION_SIZE
    public static final int REGION_SIZE_MASK
    public static final int REGION_SIZE_BLOCK_SIZE_BITS
    public static final int REGION_SIZE_BLOCKS
    public static final int REGION_SIZE_BLOCKS_MASK
    public static final int SLICE_HEIGHT_BLOCK_BITS
    public static final int SLICE_HEIGHT_BLOCKS
    public static final int SLICE_HEIGHT_BLOCK_MASK
    static final int MAX_OCCL_QUERIES
    static final int MIN_DIST_OCCL
    static final int MIN_STATE_OCCL
    static final boolean ENABLE_OCCL
nidefawl.qubes.server.ConsoleReader
nidefawl.qubes.server.GameServer:
    java.lang.Thread handshakeThread
    static final long TICK_LEN_MS
    244:252:public void loadConfig()
    280:280:public java.lang.Thread getThread()
nidefawl.qubes.server.LocalGameServer:
    11:12:public boolean getStatus()
nidefawl.qubes.server.PlayerChunkTracker$Entry:
    104:108:public void flagLight(int,int,int)
nidefawl.qubes.server.StartServer
nidefawl.qubes.server.StartServer$1
nidefawl.qubes.server.StartServer$2
nidefawl.qubes.shader.AbstractUniform:
    public abstract boolean set()
nidefawl.qubes.shader.Shader:
    private int setProgramUniformCalls
    public abstract void attach()
    71:74:public void bindAttribute(int,java.lang.String)
    146:150:public void setProgramUniform2i(java.lang.String,int,int)
    195:196:public void setProgramUniform3f(java.lang.String,nidefawl.qubes.vec.Vector3f)
    199:200:public void setProgramUniform3f(java.lang.String,nidefawl.qubes.vec.Vector4f)
    211:214:public void reuploadUniforms()
    218:220:public int getAndResetNumCalls()
    228:228:public int get()
nidefawl.qubes.shader.ShaderBuffer:
    191:191:public java.nio.ByteBuffer getMappedBuf()
    194:197:public java.nio.FloatBuffer getMappedBufFloat()
    210:210:public int getSize()
nidefawl.qubes.shader.ShaderCompileError:
    private static final long serialVersionUID
    39:39:public java.lang.String getCode()
nidefawl.qubes.shader.ShaderSourceBundle:
    34:34:public java.lang.String getName()
nidefawl.qubes.shader.Shaders:
    10:10:public Shaders()
nidefawl.qubes.shader.Uniform2i
nidefawl.qubes.shader.Uniform3f:
    40:41:public void set(nidefawl.qubes.vec.Vector3f)
nidefawl.qubes.shader.UniformBuffer:
    51:52:nidefawl.qubes.shader.UniformBuffer addFloat()
    67:67:public java.nio.FloatBuffer getFloatBuffer()
    73:74:void skip()
    499:502:public static void setMVP(java.nio.FloatBuffer)
    524:524:public static int getMaxBindingPoint()
nidefawl.qubes.shader.UniformMat4:
    43:53:public boolean set()
nidefawl.qubes.test.ArrayAccessPerf
nidefawl.qubes.test.ArrayAccessPerf$MyArray
nidefawl.qubes.test.ArrayAccessPerf$MyArrayFlat
nidefawl.qubes.test.ArrayAccessPerf$MyArrayMult
nidefawl.qubes.test.ArrayAccessPerf$MyEntry
nidefawl.qubes.test.CoordLongHash
nidefawl.qubes.test.HalfTest
nidefawl.qubes.test.ShortArrayToByteArray
nidefawl.qubes.test.TestCP
nidefawl.qubes.test.TestChunkDataSpeedConsistent
nidefawl.qubes.test.TestChunkDataThread
nidefawl.qubes.test.TestChunkDataThread$1
nidefawl.qubes.test.TestFrustum
nidefawl.qubes.test.TestIntHashFunctions
nidefawl.qubes.test.TestLongHashFunctions
nidefawl.qubes.test.TestNoise
nidefawl.qubes.test.TestNormalCalc
nidefawl.qubes.test.TestRegionFile
nidefawl.qubes.test.TestRegionFile$1
nidefawl.qubes.test.TestStructureMap
nidefawl.qubes.test.TestStructureMap$1
nidefawl.qubes.test.ThreadInterrupt
nidefawl.qubes.test.ThreadInterrupt$MyThread
nidefawl.qubes.texture.PNGDecoder:
    private static final int IHDR
    private static final int PLTE
    private static final int tRNS
    private static final int IDAT
    private static final int IEND
    public static final byte COLOR_GREYSCALE
    public static final byte COLOR_TRUECOLOR
    public static final byte COLOR_INDEXED
    public static final byte COLOR_GREYALPHA
    public static final byte COLOR_TRUEALPHA
    106:106:public int getColorType()
    128:128:public boolean hasAlphaChannel()
    140:140:public boolean hasAlpha()
    145:145:public boolean isRGB()
    162:176:public void overwriteTRNS(byte,byte,byte)
    365:373:public void decodeFlipped(java.nio.ByteBuffer,int,nidefawl.qubes.texture.PNGDecoder$Format)
nidefawl.qubes.texture.PNGDecoder$Format:
    37:37:public boolean isHasAlpha()
nidefawl.qubes.texture.TMgr:
    8:8:public TMgr()
    23:23:public static int getEmptyNormalMap()
    35:35:public static int getEmptySpecularMap()
nidefawl.qubes.texture.TextureManager:
    74:74:public void load(java.lang.String)
    100:100:public int makeNewTexture(nidefawl.qubes.assets.AssetTexture)
    158:158:public int setupTexture(nidefawl.qubes.assets.AssetTexture,boolean,boolean,int)
nidefawl.qubes.texture.TextureUtil:
    7:7:public TextureUtil()
    10:17:public static byte[] genNoise(int)
    135:164:private static double getBlur(double[],int,int,int,int,int)
    287:296:public static int[] toIntRGBA(byte[])
    300:316:public static byte[] toBytesRGBA(java.awt.image.BufferedImage)
    324:324:public static float getA(int)
nidefawl.qubes.texture.array.BlockTextureArray:
    public static final int BLOCK_TEXTURE_BITS
nidefawl.qubes.texture.array.ItemTextureArray:
    public static final int maxTextures
nidefawl.qubes.util.ClipboardHelper:
    7:7:public ClipboardHelper()
nidefawl.qubes.util.Color:
    5:5:public Color()
nidefawl.qubes.util.FastArrayList
nidefawl.qubes.util.FastArrayList$1
nidefawl.qubes.util.Flags
nidefawl.qubes.util.GameContext:
    17:17:public GameContext()
nidefawl.qubes.util.GameError:
    private static final long serialVersionUID
    8:9:public GameError(java.lang.Throwable)
nidefawl.qubes.util.GameMath:
    public static final float PI
    public static final float PI_OVER_180
    public static final float P_180_OVER_PI
    8:8:public GameMath()
    30:30:public static final float asin(float)
    35:35:public static final float sinh(float)
    95:117:public static nidefawl.qubes.vec.Matrix4f convertQuaternionToMatrix4f(nidefawl.qubes.vec.Quaternion,nidefawl.qubes.vec.Matrix4f)
    138:141:public static int randomI2(long)
    154:154:public static int ihToZ(int)
    157:157:public static int ihToX(int)
    186:186:public static float mod(float,float)
    288:293:public static float wrapAngle0_360(float)
nidefawl.qubes.util.Half:
    10:10:public Half()
    14:34:public static float toFloat(int)
nidefawl.qubes.util.IResourceManager:
    public abstract void release()
    public abstract void releaseAll(nidefawl.qubes.util.EResourceType)
nidefawl.qubes.util.NoDeploy
nidefawl.qubes.util.Pool:
    public abstract nidefawl.qubes.util.Poolable create()
    14:23:public nidefawl.qubes.util.Poolable get()
    27:34:public void recycle(nidefawl.qubes.util.Poolable)
    37:43:public int getFree()
nidefawl.qubes.util.Poolable:
    public abstract void reset()
nidefawl.qubes.util.Project:
    10:10:public Project()
nidefawl.qubes.util.RayTrace:
    private static final float MIN_X
    private static final float MIN_Y
    private static final float MIN_Z
    private static final float MAX_X
    private static final float MAX_Y
    private static final float MAX_Z
nidefawl.qubes.util.RegionEntry:
    public abstract java.util.Set getKeys()
    public abstract void removeKey(int)
    public abstract nidefawl.qubes.vec.AABBInt getBB()
nidefawl.qubes.util.RegionMap:
    24:24:private int toBlock(int)
    43:47:public void remove(nidefawl.qubes.util.RegionEntry)
    51:60:public void debug()
    63:63:public boolean contains(nidefawl.qubes.util.RegionEntry)
    68:68:private int key(int,int)
    72:72:public java.util.Collection getRegion(int,int)
    91:103:boolean isInRegion(nidefawl.qubes.util.RegionEntry,int,int)
    107:124:public java.util.Collection getRegions(int,int,int,int)
    128:139:public boolean containsAny(int,int,int)
    143:169:public nidefawl.qubes.util.RegionEntry getNearest(int,int)
    173:177:public int getDistanceSq(nidefawl.qubes.util.RegionEntry,int,int)
    189:201:public void validate()
nidefawl.qubes.util.RenderUtil:
    8:8:public RenderUtil()
    11:30:public static void makeCube2(nidefawl.qubes.gl.VertexBuffer,float)
nidefawl.qubes.util.ServerStats:
    12:12:public ServerStats()
    25:35:public static void dump()
nidefawl.qubes.util.SideOnly
nidefawl.qubes.util.SingleBlockWorld:
    37:39:public void setAirBlock(int,int)
    42:43:public void setLight(int)
    65:65:public boolean setType(int,int,int,int,int)
    70:70:public int getHeight(int,int)
    75:75:public boolean setData(int,int,int,int,int)
    117:117:public boolean setBlockData(int,int,int,nidefawl.qubes.chunk.blockdata.BlockData,int)
    122:122:public nidefawl.qubes.biome.Biome getBiome(int,int)
nidefawl.qubes.util.SnakeIterator:
    27:27:public boolean hasMore(int)
    59:59:public int getPos()
    63:64:public void setMax(int)
nidefawl.qubes.util.Stats:
    3:3:public Stats()
nidefawl.qubes.util.StringUtil:
    5:5:public StringUtil()
nidefawl.qubes.util.SysInfo:
    public java.lang.String lwjglVersion
nidefawl.qubes.util.Timer:
    private static final long NS_IN_MS
nidefawl.qubes.util.TripletIntHash:
    4:4:public TripletIntHash()
nidefawl.qubes.util.TripletLongHash:
    4:4:public TripletLongHash()
nidefawl.qubes.util.TripletShortHash:
    4:4:public TripletShortHash()
nidefawl.qubes.util.UnsafeHelper:
    14:14:public UnsafeHelper()
nidefawl.qubes.vec.AABB:
    68:74:public void expand(double,double,double)
    85:85:public nidefawl.qubes.vec.AABB copy()
    106:106:public double getCenterY()
    121:127:public boolean intersects(nidefawl.qubes.vec.AABB)
nidefawl.qubes.vec.AABBFloat:
    25:25:public float getWidth()
    28:28:public float getHeight()
    31:31:public float getLength()
    60:66:public void expand(float,float,float)
    77:77:public nidefawl.qubes.vec.AABBFloat copy()
    84:84:public float getCenterX()
    88:88:public float getCenterY()
    92:92:public float getCenterZ()
    96:100:public void centerXZ(float,float,float)
    103:109:public boolean intersects(nidefawl.qubes.vec.AABBFloat)
nidefawl.qubes.vec.AABBInt:
    26:26:public int getWidth()
    29:29:public int getHeight()
    32:32:public int getLength()
    36:42:public void offset(int,int,int)
    45:57:public void expandTo(int,int,int)
    61:67:public void expand(int,int,int)
    78:78:public nidefawl.qubes.vec.AABBInt copy()
    85:85:public int getCenterX()
    89:89:public int getCenterY()
    93:93:public int getCenterZ()
    97:101:public void centerXZ(int,int,int)
    104:110:public boolean intersects(nidefawl.qubes.vec.AABBInt)
    147:147:public boolean equalBB(nidefawl.qubes.vec.AABBInt)
nidefawl.qubes.vec.BlockBoundingBox:
    public static final int MIN
    public static final int MAX
    public static final int MINY
    public static final int MAXY
    97:109:public void expand()
    116:116:public boolean contains(int,int,int)
nidefawl.qubes.vec.BlockPos:
    86:86:public int getVolume()
nidefawl.qubes.vec.ChunkPos:
    40:40:public nidefawl.qubes.vec.ChunkPos copy()
    56:58:public void set(nidefawl.qubes.vec.BlockPos)
    60:60:public boolean isEqualTo(int,int,int)
nidefawl.qubes.vec.Dir:
    public static final int DIR_POS_X
    public static final int DIR_NEG_X
    public static final int DIR_POS_Y
    public static final int DIR_NEG_Y
    public static final int DIR_POS_Z
    public static final int DIR_NEG_Z
    3:3:public Dir()
    38:50:public static int toInt(int,int,int)
    70:84:public static java.lang.String toFaceName(int)
nidefawl.qubes.vec.Frustum:
    private static final float HALF_ANG2RAD
    static final int TOP
    static final int BOTTOM
    static final int LEFT
    static final int RIGHT
    static final int NEARP
    static final int FARP
    private boolean changed
    public static final int FRUSTUM_INSIDE_FULLY
    public static final int FRUSTUM_INSIDE
    public static final int FRUSTUM_OUTSIDE
    62:72:public void set2(nidefawl.qubes.vec.Matrix4f)
    77:77:public boolean isChanged()
    134:157:public int pointInFrustum(nidefawl.qubes.vec.Vector3f)
    204:219:public int checkFrustum(nidefawl.qubes.vec.AABB)
    223:238:public int checkFrustumPnt(nidefawl.qubes.vec.Vector3f,double)
nidefawl.qubes.vec.Matrix4f:
    25:46:public Matrix4f(nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector3f,float)
    59:64:public java.lang.String toStringShort()
    182:199:public nidefawl.qubes.vec.Matrix4f load(java.nio.FloatBuffer)
    236:253:public nidefawl.qubes.vec.Matrix4f loadTranspose(java.nio.FloatBuffer)
    287:287:public nidefawl.qubes.vec.Matrix4f store(float[])
    316:332:public nidefawl.qubes.vec.Matrix4f storeTranspose(java.nio.FloatBuffer)
    341:350:public nidefawl.qubes.vec.Matrix4f store3f(java.nio.FloatBuffer)
    361:381:public static nidefawl.qubes.vec.Matrix4f add(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f)
    392:412:public static nidefawl.qubes.vec.Matrix4f sub(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f)
    472:485:public static nidefawl.qubes.vec.Vector4f transform(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    522:535:public static nidefawl.qubes.vec.Vector4f transformTransposed(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    668:689:public static nidefawl.qubes.vec.Matrix4f convertQuaternionToMatrix4f(nidefawl.qubes.vec.Quaternion)
    700:721:public final nidefawl.qubes.vec.Matrix4f setRotation(nidefawl.qubes.vec.Vector3f)
    921:963:public static nidefawl.qubes.vec.Matrix4f invert2(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f)
    1027:1027:public nidefawl.qubes.vec.Matrix4f negate()
    1036:1036:public nidefawl.qubes.vec.Matrix4f negate(nidefawl.qubes.vec.Matrix4f)
    1046:1066:public static nidefawl.qubes.vec.Matrix4f negate(nidefawl.qubes.vec.Matrix4f,nidefawl.qubes.vec.Matrix4f)
    1131:1155:public static nidefawl.qubes.vec.Matrix4f toRotationMatrix(nidefawl.qubes.vec.Quaternion,nidefawl.qubes.vec.Matrix4f)
    1158:1182:public static nidefawl.qubes.vec.Matrix4f toMatrix4f(nidefawl.qubes.vec.Quaternion)
    1185:1203:public final void setFromQuat(float,float,float,float)
    1236:1248:public void mulFloat(float)
    1257:1275:public void toEuler(nidefawl.qubes.vec.Vector3f)
    1291:1295:public void viewVec(float,float,float)
nidefawl.qubes.vec.Quaternion
nidefawl.qubes.vec.TransformStack:
    static final int MAX_STACK
nidefawl.qubes.vec.Vec3D:
    34:36:public void set(double,double)
    49:52:public nidefawl.qubes.vec.Vec3D translate(double,double,double)
    72:77:public static nidefawl.qubes.vec.Vec3D cross(nidefawl.qubes.vec.Vec3D,nidefawl.qubes.vec.Vec3D,nidefawl.qubes.vec.Vec3D)
    81:84:public nidefawl.qubes.vec.Vec3D negate()
    88:93:public nidefawl.qubes.vec.Vec3D negate(nidefawl.qubes.vec.Vec3D)
    97:104:public nidefawl.qubes.vec.Vec3D normalise(nidefawl.qubes.vec.Vec3D)
    108:108:public static double dot(nidefawl.qubes.vec.Vec3D,nidefawl.qubes.vec.Vec3D)
    112:117:public static double angle(nidefawl.qubes.vec.Vec3D,nidefawl.qubes.vec.Vec3D)
    121:124:public nidefawl.qubes.vec.Vec3D load(java.nio.FloatBuffer)
    136:139:public nidefawl.qubes.vec.Vec3D store(java.nio.FloatBuffer)
    156:156:public final double getX()
    160:160:public final double getY()
    164:165:public final void setX(double)
    168:169:public final void setY(double)
    172:173:public void setZ(double)
    176:176:public double getZ()
    184:189:public final nidefawl.qubes.vec.Vec3D normalise()
    193:193:public nidefawl.qubes.vec.Vec3D offset(double,double,double)
    197:198:public void set(nidefawl.qubes.vec.Vector3f)
nidefawl.qubes.vec.Vector2f:
    18:21:public Vector2f(float,float)
    28:29:public Vector2f(double,double)
    31:36:public void normalize()
    41:42:public float getLength()
    49:49:public double dotProduct(nidefawl.qubes.vec.Vector2f)
    64:64:public double crossProduct(nidefawl.qubes.vec.Vector2f)
nidefawl.qubes.vec.Vector3f:
    48:50:public void set(float,float)
    158:161:public nidefawl.qubes.vec.Vector3f negate()
    172:177:public nidefawl.qubes.vec.Vector3f negate(nidefawl.qubes.vec.Vector3f)
    188:195:public nidefawl.qubes.vec.Vector3f normalise(nidefawl.qubes.vec.Vector3f)
    221:226:public static float angle(nidefawl.qubes.vec.Vector3f,nidefawl.qubes.vec.Vector3f)
    233:236:public nidefawl.qubes.vec.Vector3f load(java.nio.FloatBuffer)
    284:284:public final float getX()
    291:291:public final float getY()
    325:325:public float getZ()
    359:359:public nidefawl.qubes.vec.Vector3f scaleN(float)
    407:407:public nidefawl.qubes.vec.Vector3f copy()
nidefawl.qubes.vec.Vector4f:
    private static final long serialVersionUID
    21:23:public Vector4f(nidefawl.qubes.vec.Vector4f)
    25:26:public void set(nidefawl.qubes.vec.Vector4f)
    40:42:public void set(float,float)
    48:51:public void set(float,float,float)
    74:74:public float lengthSquaredXYZ()
    84:88:public nidefawl.qubes.vec.Vector4f translate(float,float,float,float)
    100:104:public static nidefawl.qubes.vec.Vector4f add(nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    117:121:public static nidefawl.qubes.vec.Vector4f sub(nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    131:135:public nidefawl.qubes.vec.Vector4f negate()
    144:150:public nidefawl.qubes.vec.Vector4f negate(nidefawl.qubes.vec.Vector4f)
    160:167:public nidefawl.qubes.vec.Vector4f normalise(nidefawl.qubes.vec.Vector4f)
    178:178:public static float dot(nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    188:193:public static float angle(nidefawl.qubes.vec.Vector4f,nidefawl.qubes.vec.Vector4f)
    200:204:public nidefawl.qubes.vec.Vector4f load(java.nio.FloatBuffer)
    211:215:public nidefawl.qubes.vec.Vector4f scale(float)
    222:222:public nidefawl.qubes.vec.Vector4f scaleN(float)
    230:235:public nidefawl.qubes.vec.Vector4f store(java.nio.FloatBuffer)
    246:246:public final float getX()
    253:253:public final float getY()
    261:262:public final void setX(float)
    269:270:public final void setY(float)
    277:278:public void setZ(float)
    285:285:public float getZ()
    293:294:public void setW(float)
    300:300:public float getW()
    315:315:public final float lengthXYZ()
    318:319:public nidefawl.qubes.vec.Vector4f normalise()
    329:338:public boolean setChecked(float,float,float,float)
nidefawl.qubes.world.BlockState
nidefawl.qubes.world.IBlockWorld:
    public abstract boolean setType(int,int,int,int,int)
    public abstract int getHeight(int,int)
    public abstract boolean setData(int,int,int,int,int)
    public abstract boolean setBlockData(int,int,int,nidefawl.qubes.chunk.blockdata.BlockData,int)
    public abstract nidefawl.qubes.biome.Biome getBiome(int,int)
nidefawl.qubes.world.World:
    public static final float MAX_XZ
    public static final float MIN_XZ
    public static final int MAX_WORLDHEIGHT
    public abstract void tickUpdate()
    349:349:public long getSeed()
    375:375:public nidefawl.qubes.chunk.Chunk getChunkFromBlock(int,int)
    409:410:public int getHeightMap(int,int)
    423:426:public nidefawl.qubes.biome.Biome getBiome(int,int)
    public abstract nidefawl.qubes.entity.Entity getEntity(int)
nidefawl.qubes.world.WorldClientBenchmark
nidefawl.qubes.world.WorldServer:
    199:199:public void updateGeneratedChunks()
    370:370:public nidefawl.qubes.entity.Entity getEntity(int)
nidefawl.qubes.world.WorldSettings:
    java.lang.String generatorSettings
nidefawl.qubes.world.structure.Structure:
    29:29:public java.util.Set getKeys()
    40:42:public void removeKey(int)
    65:65:public nidefawl.qubes.vec.AABBInt getBB()
    113:113:public boolean contains(int,int,int)
nidefawl.qubes.world.structure.StructureMap:
    52:52:public java.util.Collection values()
    65:65:public boolean containsAny(int,int,int)
    69:69:public int size()
    73:81:public boolean canBuildStructure(nidefawl.qubes.vec.AABBInt)
    85:85:public nidefawl.qubes.world.structure.Structure getNextStructure(int,int,int)
    93:94:public void debug()
    97:98:public void validate()
nidefawl.qubes.world.structure.tree.StructureBlockIterator
nidefawl.qubes.worldgen.TerrainGen:
    14:14:public TerrainGen()
nidefawl.qubes.worldgen.populator.ChunkPopulator:
    public static final java.lang.String POPULATOR_NAME
nidefawl.qubes.worldgen.populator.EmptyChunkPopulator:
    public static final java.lang.String POPULATOR_NAME
nidefawl.qubes.worldgen.populator.IWorldGen
nidefawl.qubes.worldgen.populator.TreeGen1:
    33:107:public boolean generate(nidefawl.qubes.world.IBlockWorld,int,int,int,java.util.Random)
    120:127:private boolean canReplaceAll(nidefawl.qubes.world.IBlockWorld,int,int,int,int,int)
    135:135:private boolean canReplace(int)
    139:139:public boolean isSoil(int)
nidefawl.qubes.worldgen.populator.TreeGeneratorLSystem:
    private int nPlaced
nidefawl.qubes.worldgen.populator.TreeGenerators:
    17:17:public TreeGenerators()
nidefawl.qubes.worldgen.structure.MineGen:
    static final int r
    static final int l
nidefawl.qubes.worldgen.terrain.TerrainGenBlockTest:
    public static final java.lang.String GENERATOR_NAME
nidefawl.qubes.worldgen.terrain.TerrainGenFlatSand128:
    public static final java.lang.String GENERATOR_NAME
nidefawl.qubes.worldgen.terrain.TerrainGenMines:
    public static final java.lang.String GENERATOR_NAME
nidefawl.qubes.worldgen.terrain.TerrainGenQTest:
    public static final java.lang.String GENERATOR_NAME
    336:349:private double func2(double,double,double)
    353:358:public static double mix(double,double,double)
    366:374:public static double func(double,double,double)
    377:379:public int distSq(int,int,int,int,int,int)
nidefawl.qubes.worldgen.terrain.TerrainGeneratorIsland:
    public static final java.lang.String GENERATOR_NAME
    43:56:public static double func2(double,double,double)
    60:65:public static double mix(double,double,double)
    73:81:public static double func(double,double,double)
    84:86:public int distSq(int,int,int,int,int,int)
nidefawl.qubes.worldgen.terrain.TerrainGeneratorOther:
    public static final java.lang.String GENERATOR_NAME
    75:151:private void generateTerrain2(nidefawl.qubes.chunk.Chunk)
    282:287:public static double mix(double,double,double)
    295:303:public static double func(double,double,double)
    306:308:public int distSq(int,int,int,int,int,int)
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen5:
    private nidefawl.qubes.noise.RiverNoise2D r2D
    private nidefawl.qubes.noise.RiverNoise2D r2D2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen5$NoiseData:
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen6:
    private nidefawl.qubes.noise.RiverNoise2D r2D
    private nidefawl.qubes.noise.RiverNoise2D r2D2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen6$NoiseData:
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen7:
    private nidefawl.qubes.noise.RiverNoise2D r2D
    private nidefawl.qubes.noise.RiverNoise2D r2D2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGen7$NoiseData:
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn
    public nidefawl.qubes.noise.RiverNoise2D$RiverNoiseResult r2Dn2
nidefawl.qubes.worldgen.terrain.main.SubTerrainGenMountainPlateus
nidefawl.qubes.worldgen.terrain.main.SubTerrainGenMountainPlateus$NoiseData
nidefawl.qubes.worldgen.terrain.main.SubTerrainGenUltraMountains
nidefawl.qubes.worldgen.terrain.main.SubTerrainGenUltraMountains$NoiseData
nidefawl.qubes.worldgen.terrain.main.TerrainGeneratorLight:
    public static final java.lang.String GENERATOR_NAME
    static final double smoothScale
    342:355:public static double func2(double,double,double)
    372:380:public static double func(double,double,double)
    383:385:public int distSq(int,int,int,int,int,int)
nidefawl.qubes.worldgen.terrain.main.TerrainGeneratorMain:
    public static final java.lang.String GENERATOR_NAME
    static final double smoothScale
    377:385:public static double func(double,double,double)
    388:390:public int distSq(int,int,int,int,int,int)
nidefawl.qubes.worldgen.terrain.main.TerrainGeneratorTest2:
    public static final java.lang.String GENERATOR_NAME
    static final double smoothScale
    private nidefawl.qubes.worldgen.terrain.main.TerrainGeneratorLight main
    449:457:public static double func(double,double,double)
    460:462:public int distSq(int,int,int,int,int,int)
nidefawl.swing.TextDialog:
    132:133:public void setText(java.lang.String)
